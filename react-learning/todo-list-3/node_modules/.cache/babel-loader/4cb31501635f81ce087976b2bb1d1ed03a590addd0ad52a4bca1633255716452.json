{"ast":null,"code":"var _jsxFileName = \"D:\\\\new-welcome\\\\react-learning\\\\todo-list-3\\\\src\\\\component\\\\Users\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FormInputs from './FormInputs';\nimport TableData from './TableData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = props => {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [formInputData, setFormInputData] = useState({\n    fullname: '',\n    emailAddress: '',\n    salary: ''\n  });\n  const inputChangeHandle = e => {\n    // console.log(e);\n    const newInput = data => ({\n      ...data,\n      [e.target.name]: e.target.value\n    });\n    setFormInputData(newInput);\n  };\n  const submitHandle = e => {\n    e.preventDefault();\n    console.log(formInputData);\n    if (formInputData.fullname.trim().length === 0 || formInputData.salary.trim().length === 0 || formInputData.emailAddress.trim().length === 0) {\n      return alert('Please Enter Some Value');\n    }\n    const checkEmptyInput = !Object.values(formInputData).every(res => res == '   ');\n    if (checkEmptyInput) {\n      const newData = data => [...data, formInputData];\n      setTableData(newData);\n      const emptyInput = {\n        fullname: '',\n        emailAddress: '',\n        salary: ''\n      };\n      setFormInputData(emptyInput);\n      // setFormInputData('')\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormInputs, {\n      onInputChange: inputChangeHandle,\n      formInputData: formInputData,\n      onSubmitHandle: submitHandle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableData, {\n      tableData: tableData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Form, \"Sl/rdf4SzQSFn64cyDCGeP88mCg=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","FormInputs","TableData","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","props","_s","tableData","setTableData","formInputData","setFormInputData","fullname","emailAddress","salary","inputChangeHandle","e","newInput","data","target","name","value","submitHandle","preventDefault","console","log","trim","length","alert","checkEmptyInput","Object","values","every","res","newData","emptyInput","children","onInputChange","onSubmitHandle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/new-welcome/react-learning/todo-list-3/src/component/Users/Form.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport FormInputs from './FormInputs'\r\nimport TableData from './TableData'\r\n\r\nconst Form = (props) => {\r\n\r\n    const [tableData, setTableData] = useState([])\r\n    const [formInputData, setFormInputData] =useState({\r\n        fullname : '',\r\n        emailAddress : '',\r\n        salary: ''\r\n    })\r\n\r\n    const inputChangeHandle = e => {\r\n        // console.log(e);\r\n        const newInput = data =>({\r\n                ...data,\r\n                [e.target.name] : e.target.value\r\n        })\r\n        setFormInputData(newInput)\r\n    }\r\n\r\n    const submitHandle = e => {\r\n        e.preventDefault()\r\n        console.log(formInputData);\r\n        if(formInputData.fullname.trim().length === 0 || formInputData.salary.trim().length === 0 || formInputData.emailAddress.trim().length === 0){\r\n            return alert('Please Enter Some Value')\r\n        }\r\n        const checkEmptyInput = !Object.values(formInputData).every(res => res=='   ')\r\n        if(checkEmptyInput){\r\n            const newData = (data) => ([...data, formInputData])\r\n            setTableData(newData);\r\n            const emptyInput = {fullname : '', emailAddress: '', salary :''}\r\n            setFormInputData(emptyInput)\r\n            // setFormInputData('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormInputs onInputChange={inputChangeHandle} formInputData={formInputData} onSubmitHandle={submitHandle}/>\r\n            <TableData tableData={tableData}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAEb,QAAQ,CAAC;IAC9Cc,QAAQ,EAAG,EAAE;IACbC,YAAY,EAAG,EAAE;IACjBC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAGC,CAAC,IAAI;IAC3B;IACA,MAAMC,QAAQ,GAAGC,IAAI,KAAI;MACjB,GAAGA,IAAI;MACP,CAACF,CAAC,CAACG,MAAM,CAACC,IAAI,GAAIJ,CAAC,CAACG,MAAM,CAACE;IACnC,CAAC,CAAC;IACFV,gBAAgB,CAACM,QAAQ,CAAC;EAC9B,CAAC;EAED,MAAMK,YAAY,GAAGN,CAAC,IAAI;IACtBA,CAAC,CAACO,cAAc,EAAE;IAClBC,OAAO,CAACC,GAAG,CAACf,aAAa,CAAC;IAC1B,IAAGA,aAAa,CAACE,QAAQ,CAACc,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,IAAIjB,aAAa,CAACI,MAAM,CAACY,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,IAAIjB,aAAa,CAACG,YAAY,CAACa,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAC;MACxI,OAAOC,KAAK,CAAC,yBAAyB,CAAC;IAC3C;IACA,MAAMC,eAAe,GAAG,CAACC,MAAM,CAACC,MAAM,CAACrB,aAAa,CAAC,CAACsB,KAAK,CAACC,GAAG,IAAIA,GAAG,IAAE,KAAK,CAAC;IAC9E,IAAGJ,eAAe,EAAC;MACf,MAAMK,OAAO,GAAIhB,IAAI,IAAM,CAAC,GAAGA,IAAI,EAAER,aAAa,CAAE;MACpDD,YAAY,CAACyB,OAAO,CAAC;MACrB,MAAMC,UAAU,GAAG;QAACvB,QAAQ,EAAG,EAAE;QAAEC,YAAY,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAC;MAChEH,gBAAgB,CAACwB,UAAU,CAAC;MAC5B;IACJ;EACJ,CAAC;;EAED,oBACIjC,OAAA,CAAAE,SAAA;IAAAgC,QAAA,gBACIlC,OAAA,CAACH,UAAU;MAACsC,aAAa,EAAEtB,iBAAkB;MAACL,aAAa,EAAEA,aAAc;MAAC4B,cAAc,EAAEhB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC3GxC,OAAA,CAACF,SAAS;MAACQ,SAAS,EAAEA;IAAU;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA,gBACnC;AAEX,CAAC;AAAAnC,EAAA,CAxCKF,IAAI;AAAAsC,EAAA,GAAJtC,IAAI;AA0CV,eAAeA,IAAI;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}